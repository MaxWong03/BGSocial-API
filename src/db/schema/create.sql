DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS user_games CASCADE;
DROP TABLE IF EXISTS games CASCADE;
DROP TABLE IF EXISTS game_categories CASCADE;
DROP TABLE IF EXISTS game_categories_games CASCADE;
DROP TABLE IF EXISTS events CASCADE;
DROP TABLE IF EXISTS event_dates CASCADE;
DROP TABLE IF EXISTS event_games CASCADE;
DROP TABLE IF EXISTS attendances CASCADE;
DROP TABLE IF EXISTS event_dates_votes CASCADE;
DROP TABLE IF EXISTS plays CASCADE;
DROP TABLE IF EXISTS plays_users CASCADE;

CREATE TABLE users (
  id SERIAL PRIMARY KEY NOT NULL,
  name VARCHAR(255) NOT NULL,
  nickname VARCHAR(255),
  email VARCHAR(255) NOT NULL,
  password VARCHAR(255) NOT NULL,
  avatar VARCHAR(255)
);

CREATE TABLE games (
  id SERIAL PRIMARY KEY NOT NULL,
  name VARCHAR(255) NOT NULL,
  publisher VARCHAR(255) NOT NULL,
  bgg_id INTEGER NOT NULL,
  average_bgg_rating VARCHAR(255) NOT NULL,
  image VARCHAR(255) NOT NULL
);

CREATE TABLE user_games (
  id SERIAL PRIMARY KEY NOT NULL,
  game_id INTEGER REFERENCES games(id) ON DELETE CASCADE,
  user_id INTEGER REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE game_categories (
  id SERIAL PRIMARY KEY NOT NULL,
  name VARCHAR(255) NOT NULL
);

CREATE TABLE game_categories_games (
  id SERIAL PRIMARY KEY NOT NULL,
  game_id INTEGER REFERENCES games(id) ON DELETE CASCADE,
  game_category_id INTEGER REFERENCES game_categories(id) ON DELETE CASCADE
);

CREATE TABLE events (
  id SERIAL PRIMARY KEY NOT NULL,
  owner_id INTEGER REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE event_dates (
  id SERIAL PRIMARY KEY NOT NULL,
  is_chosen BOOLEAN  NOT NULL DEFAULT FALSE,
  date DATE NOT NULL,
  location VARCHAR(255) NOT NULL,
  event_id INTEGER REFERENCES events(id) ON DELETE CASCADE
);

CREATE TABLE event_games (
  id SERIAL PRIMARY KEY NOT NULL,
  game_id INTEGER REFERENCES games(id) ON DELETE CASCADE,
  event_id INTEGER REFERENCES events(id) ON DELETE CASCADE
);

CREATE TABLE attendances (
  id SERIAL PRIMARY KEY NOT NULL,
  is_confirmed BOOLEAN NOT NULL DEFAULT FALSE,
  is_not_assisting BOOLEAN NOT NULL DEFAULT FALSE,
  attendant_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
  event_id INTEGER REFERENCES events(id) ON DELETE CASCADE
);

CREATE TABLE event_dates_votes (
  id SERIAL PRIMARY KEY NOT NULL,
  attendance_id INTEGER REFERENCES attendances(id) ON DELETE CASCADE,
  event_date_id INTEGER REFERENCES event_dates(id) ON DELETE CASCADE
);

CREATE TABLE plays (
  id SERIAL PRIMARY KEY NOT NULL,
  date DATE,
  duration TIME,
  game_id INTEGER REFERENCES games(id) ON DELETE CASCADE,
  event_id INTEGER REFERENCES events(id) ON DELETE CASCADE
);

CREATE TABLE plays_users (
  id SERIAL PRIMARY KEY NOT NULL,
  score INTEGER,
  is_winner BOOLEAN NOT NULL DEFAULT FALSE,
  user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
  play_id INTEGER REFERENCES plays(id) ON DELETE CASCADE
);


